
NumericUnderscoresFail0.hs:8:20: error:
    • Found hole: _ :: t0
      Where: ‘t0’ is an ambiguous type variable
    • In the first argument of ‘1000000’, namely ‘_’
      In the expression: 1000000 _
      In the first argument of ‘print’, namely
        ‘[1000000 _, _1000000, 0 _ . 0001, _0.0001, ....]’
    • Relevant bindings include
        main :: IO () (bound at NumericUnderscoresFail0.hs:4:1)
      Valid substitutions include
        (.) :: forall b c a. (b -> c) -> (a -> b) -> a -> c
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        asTypeOf :: forall a. a -> a -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        const :: forall a b. a -> b -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        until :: forall a. (a -> Bool) -> (a -> a) -> a -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        undefined :: forall (a :: TYPE r).
                     GHC.Stack.Types.HasCallStack =>
                     a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Err’))
        seq :: forall a b. a -> b -> b
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Prim’))
        (Some substitutions suppressed; use -fmax-valid-substitutions=N or -fno-max-valid-substitutions)

NumericUnderscoresFail0.hs:9:13: error:
    • Found hole: _1000000 :: a0 -> c0
      Where: ‘a0’ is an ambiguous type variable
             ‘c0’ is an ambiguous type variable
      Or perhaps ‘_1000000’ is mis-spelled, or not in scope
    • In the expression: _1000000
      In the first argument of ‘print’, namely
        ‘[1000000 _, _1000000, 0 _ . 0001, _0.0001, ....]’
      In a stmt of a 'do' block:
        print [1000000 _, _1000000, 0 _ . 0001, _0.0001, ....]
    • Relevant bindings include
        main :: IO () (bound at NumericUnderscoresFail0.hs:4:1)
      Valid substitutions include
        (.) :: forall b c a. (b -> c) -> (a -> b) -> a -> c
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        asTypeOf :: forall a. a -> a -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        const :: forall a b. a -> b -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        until :: forall a. (a -> Bool) -> (a -> a) -> a -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        undefined :: forall (a :: TYPE r).
                     GHC.Stack.Types.HasCallStack =>
                     a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Err’))
        seq :: forall a b. a -> b -> b
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Prim’))
        (Some substitutions suppressed; use -fmax-valid-substitutions=N or -fno-max-valid-substitutions)

NumericUnderscoresFail0.hs:12:14: error:
    • Found hole: _ :: t1
      Where: ‘t1’ is an ambiguous type variable
    • In the first argument of ‘0’, namely ‘_’
      In the first argument of ‘(.)’, namely ‘0 _’
      In the expression: 0 _ . 0001
    • Relevant bindings include
        main :: IO () (bound at NumericUnderscoresFail0.hs:4:1)
      Valid substitutions include
        (.) :: forall b c a. (b -> c) -> (a -> b) -> a -> c
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        asTypeOf :: forall a. a -> a -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        const :: forall a b. a -> b -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        until :: forall a. (a -> Bool) -> (a -> a) -> a -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        undefined :: forall (a :: TYPE r).
                     GHC.Stack.Types.HasCallStack =>
                     a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Err’))
        seq :: forall a b. a -> b -> b
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Prim’))
        (Some substitutions suppressed; use -fmax-valid-substitutions=N or -fno-max-valid-substitutions)

NumericUnderscoresFail0.hs:14:19: error:
    • Found hole: _ :: t5
      Where: ‘t5’ is an ambiguous type variable
    • In the first argument of ‘0.0001’, namely ‘_’
      In the expression: 0.0001 _
      In the first argument of ‘print’, namely
        ‘[1000000 _, _1000000, 0 _ . 0001, _0.0001, ....]’
    • Relevant bindings include
        main :: IO () (bound at NumericUnderscoresFail0.hs:4:1)
      Valid substitutions include
        (.) :: forall b c a. (b -> c) -> (a -> b) -> a -> c
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        asTypeOf :: forall a. a -> a -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        const :: forall a b. a -> b -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        until :: forall a. (a -> Bool) -> (a -> a) -> a -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        undefined :: forall (a :: TYPE r).
                     GHC.Stack.Types.HasCallStack =>
                     a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Err’))
        seq :: forall a b. a -> b -> b
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Prim’))
        (Some substitutions suppressed; use -fmax-valid-substitutions=N or -fno-max-valid-substitutions)

NumericUnderscoresFail0.hs:15:15: error:
    • Found hole: _0001 :: a0 -> b0
      Where: ‘a0’ is an ambiguous type variable
             ‘b0’ is an ambiguous type variable
      Or perhaps ‘_0001’ is mis-spelled, or not in scope
    • In the second argument of ‘(.)’, namely ‘_0001’
      In the expression: 0 . _0001
      In the first argument of ‘print’, namely
        ‘[1000000 _, _1000000, 0 _ . 0001, _0.0001, ....]’
    • Relevant bindings include
        main :: IO () (bound at NumericUnderscoresFail0.hs:4:1)
      Valid substitutions include
        (.) :: forall b c a. (b -> c) -> (a -> b) -> a -> c
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        asTypeOf :: forall a. a -> a -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        const :: forall a b. a -> b -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        until :: forall a. (a -> Bool) -> (a -> a) -> a -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        undefined :: forall (a :: TYPE r).
                     GHC.Stack.Types.HasCallStack =>
                     a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Err’))
        seq :: forall a b. a -> b -> b
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Prim’))
        (Some substitutions suppressed; use -fmax-valid-substitutions=N or -fno-max-valid-substitutions)

NumericUnderscoresFail0.hs:18:14: error: Variable not in scope: e_

NumericUnderscoresFail0.hs:19:18: error:
    • Found hole: _ :: t4
      Where: ‘t4’ is an ambiguous type variable
    • In the first argument of ‘1e+23’, namely ‘_’
      In the expression: 1e+23 _
      In the first argument of ‘print’, namely
        ‘[1000000 _, _1000000, 0 _ . 0001, _0.0001, ....]’
    • Relevant bindings include
        main :: IO () (bound at NumericUnderscoresFail0.hs:4:1)
      Valid substitutions include
        (.) :: forall b c a. (b -> c) -> (a -> b) -> a -> c
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        asTypeOf :: forall a. a -> a -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        const :: forall a b. a -> b -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        until :: forall a. (a -> Bool) -> (a -> a) -> a -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        undefined :: forall (a :: TYPE r).
                     GHC.Stack.Types.HasCallStack =>
                     a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Err’))
        seq :: forall a b. a -> b -> b
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Prim’))
        (Some substitutions suppressed; use -fmax-valid-substitutions=N or -fno-max-valid-substitutions)

NumericUnderscoresFail0.hs:20:14: error: Variable not in scope: e

NumericUnderscoresFail0.hs:20:16: error:
    • Found hole: _23 :: a0 -> c0
      Where: ‘a0’ is an ambiguous type variable
             ‘c0’ is an ambiguous type variable
      Or perhaps ‘_23’ is mis-spelled, or not in scope
    • In the second argument of ‘(+)’, namely ‘_23’
      In the expression: 1 e + _23
      In the first argument of ‘print’, namely
        ‘[1000000 _, _1000000, 0 _ . 0001, _0.0001, ....]’
    • Relevant bindings include
        main :: IO () (bound at NumericUnderscoresFail0.hs:4:1)
      Valid substitutions include
        (.) :: forall b c a. (b -> c) -> (a -> b) -> a -> c
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        asTypeOf :: forall a. a -> a -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        const :: forall a b. a -> b -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        until :: forall a. (a -> Bool) -> (a -> a) -> a -> a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Base’))
        undefined :: forall (a :: TYPE r).
                     GHC.Stack.Types.HasCallStack =>
                     a
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Err’))
        seq :: forall a b. a -> b -> b
          (imported from ‘Prelude’ at NumericUnderscoresFail0.hs:1:1
           (and originally defined in ‘GHC.Prim’))
        (Some substitutions suppressed; use -fmax-valid-substitutions=N or -fno-max-valid-substitutions)
